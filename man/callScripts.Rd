% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/call_scripts.R
\name{vcfToCounts}
\alias{vcfToCounts}
\alias{getVcaf}
\alias{checkVcaf}
\alias{getTrinuc}
\alias{getBinCounts}
\alias{run_simulation}
\title{\code{callScripts} Call the supporting (non-R) scipts in TrackSig}
\usage{
vcfToCounts(vcfFile, cnaFile = NULL, purityFile = NULL,
  context = generateContext(c("CG", "TA")),
  refGenome = BSgenome.Hsapiens.UCSC.hg19, binSize = 100,
  saveIntermediate = F, intermediateFile = NULL)

getVcaf(vcfFile, cnaFile, purityFile, refGenome)

checkVcaf(vcaf, refGenome)

getTrinuc(vcaf, refGenome, saveIntermediate = F, intermediateFile)

getBinCounts(vcaf, binSize, context)

run_simulation(simName, dataDir)
}
\arguments{
\item{vcfFile}{path to variant calling format (vcf) file}

\item{cnaFile}{path to copy number abberation (cna) file}

\item{purityFile}{path to sample purity file}

\item{context}{trinucleotide combinations possible}

\item{refGenome}{reference BSgenome to use}

\item{binSize}{number of mutations per bin}

\item{saveIntermediate}{boolean whether to save intermediate results (mutation types)}

\item{intermediateFile}{file where to save intermediate results if saveIntermediate is True}

\item{vcaf}{vcaf data frame}

\item{vcfFile}{path to variant calling format (vcf) file}

\item{cnaFile}{path to copy number abberation (cna) file}

\item{purityFile}{path to sample purity file}

\item{refGenome}{reference BSgenome to use}

\item{vcaf}{vcaf data frame}

\item{refGenome}{reference BSgenome to use}

\item{vcaf}{vcaf data frame}
}
\value{
A vcaf dataframe that has vcf and vaf data concatenated

A vcaf dataframe that has vcf and vaf data concatenated

An updated vcaf data frame with trinucleotide context added for each mutation

A data frame of summary statistics and mutation type counts for each bin.
}
\description{
\code{vcf_to_counts} From a supplied VCF file run the necessary scripts to get corrected_vaf and make_counts output. Return a multi-slotted object with useful dataframes.
}
\details{
\code{run_simulation} depricated

\code{vcfToCounts} Take an input vcf file and annotation and generate the counts data
}
